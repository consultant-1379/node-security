"secadm" (* slogan = "Manages security configuration and administration on network nodes" *) WS "credentials" (* slogan = "Manages security credentials on the network nodes." *) WS ( CREDENTIALS_CREATE | CREDENTIALS_GET | CREDENTIALS_UPDATE )

CREDENTIALS_CREATE ::= "create" (* slogan = "Manages both the node usernames and the encrypted passwords" *) [ CREDENTIALS_CREATE_OPTIONS ] WS CREDENTIALS_TARGET_NODES
CREDENTIALS_GET ::= "get" (* slogan = "Allows you to retrieve both node credentials passwords, encrypted or in plain text for all users." *) [ USER_TYPE ] [ PLAIN_TEXT ] WS CREDENTIALS_TARGET_NODES
CREDENTIALS_UPDATE ::= "update" (* slogan = "Manages both the node usernames and the encrypted passwords" *) [ CREDENTIALS_UPDATE_OPTIONS ] WS CREDENTIALS_TARGET_NODES

USER_TYPE ::= WS ( "-ut" (* hide = "true" *) | "--usertype" (* slogan = "Specify a user type" *) ) WS USER_TYPE_NAME

USER_TYPE_NAME ::=  ( "root" (* slogan = "Root user" *)
                    | "secure" (* slogan = "Secure user" *)
                    | "normal" (* slogan = "Normal user" *)
                    | "nwieasecure" (* slogan = "NWI-E Side A secure user" *)
                    | "nwiebsecure" (* slogan = "NWI-E Side B secure user" *)
                    | "nodecli" (* slogan = "NodeCli user" *) )

PLAIN_TEXT ::= WS ( "-pt" (* hide = "true" *) | "--plaintext" (* slogan = "Password in plain text" *) ) WS PLAIN_TEXT_VALUE
PLAIN_TEXT_VALUE ::= ( "show" (* slogan = "Show password in plain text" *) | "hide" (* slogan = "Hide password in plain text" *) )

CREDENTIALS_CREATE_OPTIONS ::= ( SECURE_USER_CREDENTIALS_USERNAME SECURE_USER_CREDENTIALS_PASSWORD [ LDAP_USER_ENABLE LDAP_USER_STATUS ] [ NODECLI_USER_CREDENTIALS_USERNAME NODECLI_USER_CREDENTIALS_PASSWORD ] | SECURE_USER_CREDENTIALS_USERNAME SECURE_USER_CREDENTIALS_PASSWORD ROOT_USER_CREDENTIALS_USERNAME ROOT_USER_CREDENTIALS_PASSWORD NORMAL_USER_CREDENTIALS_USERNAME NORMAL_USER_CREDENTIALS_PASSWORD [ LDAP_USER_ENABLE LDAP_USER_STATUS ] [ NODECLI_USER_CREDENTIALS_USERNAME NODECLI_USER_CREDENTIALS_PASSWORD ] | SECURE_USER_CREDENTIALS_USERNAME SECURE_USER_CREDENTIALS_PASSWORD [ NWIEA_SECURE_USER_CREDENTIALS_USERNAME NWIEA_SECURE_USER_CREDENTIALS_PASSWORD NWIEB_SECURE_USER_CREDENTIALS_USERNAME NWIEB_SECURE_USER_CREDENTIALS_PASSWORD ] [ LDAP_USER_ENABLE LDAP_USER_STATUS ] [ NODECLI_USER_CREDENTIALS_USERNAME NODECLI_USER_CREDENTIALS_PASSWORD ] )

CREDENTIALS_UPDATE_OPTIONS ::= ( [ ROOT_USER_CREDENTIALS_USERNAME ] [ ROOT_USER_CREDENTIALS_PASSWORD ]  [ NORMAL_USER_CREDENTIALS_USERNAME ] [ NORMAL_USER_CREDENTIALS_PASSWORD ] [ SECURE_USER_CREDENTIALS_USERNAME ] [ SECURE_USER_CREDENTIALS_PASSWORD ] [ NODECLI_USER_CREDENTIALS_USERNAME ] [ NODECLI_USER_CREDENTIALS_PASSWORD ] | [ SECURE_USER_CREDENTIALS_USERNAME ] [ SECURE_USER_CREDENTIALS_PASSWORD ] [ NWIEA_SECURE_USER_CREDENTIALS_USERNAME ] [ NWIEA_SECURE_USER_CREDENTIALS_PASSWORD ] [ NWIEB_SECURE_USER_CREDENTIALS_USERNAME ] [ NWIEB_SECURE_USER_CREDENTIALS_PASSWORD ] [ LDAP_USER_ENABLE LDAP_USER_STATUS ] [ NODECLI_USER_CREDENTIALS_USERNAME ] [ NODECLI_USER_CREDENTIALS_PASSWORD ] | [ NODECLI_USER_CREDENTIALS_USERNAME ] [ NODECLI_USER_CREDENTIALS_PASSWORD ] )

ROOT_USER_CREDENTIALS_USERNAME ::= WS ( "-rn" (* hide = "true" *) | "--rootusername" (* slogan = "Specify the root user name" *) ) WS <root_user_name> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the name of the root user. Tip: -rn for short" *) 
ROOT_USER_CREDENTIALS_PASSWORD ::= WS ( "-rp" (* hide = "true" *) | "--rootuserpassword" (* inputType = "wrapDoubleQuotes,wrapSingleQuotes"  slogan = "Specify the root user password" *) ) WS <root_user_password> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the password for the root user. Tip: -rp for short" *)

SECURE_USER_CREDENTIALS_USERNAME ::= WS ( "-sn" (* hide = "true" *) | "--secureusername" (* slogan = "Specify the secure user name" *) ) WS <secure_user_name> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the name of the secure user. Tip: -sn for short" *) 
SECURE_USER_CREDENTIALS_PASSWORD ::= WS ( "-sp" (* hide = "true" *) | "--secureuserpassword" (* slogan = "Specify the secure user password" *) ) WS <secure_user_password> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the password for the secure user. Tip: -sp for short" *)

NORMAL_USER_CREDENTIALS_USERNAME ::= WS ( "-nn" (* hide = "true" *) | "--normalusername" (* slogan = "Specify the normal user name" *) ) WS <normal_user_name> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the name of the normal user. Tip: -nn for short" *) 
NORMAL_USER_CREDENTIALS_PASSWORD ::= WS ( "-np" (* hide = "true" *) | "--normaluserpassword" (* slogan = "Specify the normal user password" *) ) WS <normal_user_password> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the password for the normal user. Tip: -np for short" *)

NWIEA_SECURE_USER_CREDENTIALS_USERNAME ::= WS ( "-nasn" (* hide = "true" *) | "--nwieasecureusername" (* slogan = "Specify the NWI-E Side A secure user name" *) ) WS <nwiea_secure_user_name> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the name of the  NWI-E Side A secure user. Tip: -nasn for short" *)
NWIEA_SECURE_USER_CREDENTIALS_PASSWORD ::= WS ( "-nasp" (* hide = "true" *) | "--nwieasecureuserpassword" (* slogan = "Specify the NWI-E Side A secure user password" *) ) WS <nwiea_secure_user_password> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the password for the  NWI-E Side A secure user. Tip: -nasp for short" *)

NWIEB_SECURE_USER_CREDENTIALS_USERNAME ::= WS ( "-nbsn" (* hide = "true" *) | "--nwiebsecureusername" (* slogan = "Specify the NWI-E Side B secure user name" *) ) WS <nwieb_secure_user_name> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the name of the NWI-E Side B secure user. Tip: -nbsn for short" *)
NWIEB_SECURE_USER_CREDENTIALS_PASSWORD ::= WS ( "-nbsp" (* hide = "true" *) | "--nwiebsecureuserpassword" (* slogan = "Specify the NWI-E Side B secure user password" *) ) WS <nwieb_secure_user_password> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the password for the NWI-E Side B secure user. Tip: -nbsp for short" *)

NODECLI_USER_CREDENTIALS_USERNAME ::= WS ( "-ncn" (* hide = "true" *) | "--nodecliusername" (* slogan = "Specify the nodecli user name" *) ) WS <nodecli_user_name> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the name of the nodecli user. Tip: -ncn for short" *)
NODECLI_USER_CREDENTIALS_PASSWORD ::= WS ( "-ncp" (* hide = "true" *) | "--nodecliuserpassword" (* slogan = "Specify the nodecli user password" *) ) WS <nodecli_user_password> (* inputType = "wrapDoubleQuotes,wrapSingleQuotes" slogan = "Specify the password for the nodecli user. Tip: -ncp for short" *)

LDAP_USER_ENABLE ::= WS ( "-lu" (* hide = "true" *) | "--ldapuser" (* slogan = "Enable/disable node remote authentication" *) ) 

LDAP_USER_STATUS ::= WS ( "enable" (* slogan = "Enable node remote authentication" *) | "disable" (* slogan = "Disable node remote authentication" *) )

CREDENTIALS_TARGET_NODES ::= ( CREDENTIALS_NODE_LIST | CREDENTIALS_NODE_FILE )
CREDENTIALS_NODE_LIST ::= ( "-n" (* hide = "true" *) | "--nodelist" (* slogan = "Specify the list of nodes. Tip: -n for short" *) ) WS CREDENTIALS_NODE_NAME { ( "," | ";" ) (* slogan = "Comma used to add another node name to the list." *) CREDENTIALS_NODE_NAME }
CREDENTIALS_NODE_NAME ::= ( ( "MeContext=" | "NetworkElement=" | "VirtualNetworkFunctionManager=" | "NetworkFunctionVirtualizationOrchestrator=" | "VirtualInfrastructureManager=" | "CloudInfrastructureManager=" | "ManagementSystem=") <node_name> (* slogan = "Scope the Command using Node names. E.g. MyNode1,MyNode2" *) |  <node_name> (* slogan = "Scope the Command using Node names. E.g. MyNode1,MyNode2" *) )
CREDENTIALS_NODE_FILE ::= ( "-nf"  (* hide = "true" *) | "--nodefile" (* slogan = "Specify the file containing a list of nodes. Tip: -nf for short" *) ) WS "file:" <file_name> (* inputType = "fileName" slogan = "Specify a file containing a list of nodes" *)
